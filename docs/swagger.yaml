basePath: /v1
definitions:
  handler.CreateProductRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
    required:
      - description
      - name
      - price
      - quantity
    type: object
  handler.CreateProductResponse:
    properties:
      data:
        $ref: "#/definitions/schemas.ProductResponse"
      message:
        type: string
    type: object
  handler.DeleteProductResponse:
    properties:
      data:
        $ref: "#/definitions/schemas.ProductResponse"
      message:
        type: string
    type: object
  handler.ErrorResponse:
    properties:
      errorCode:
        type: string
      message:
        type: string
    type: object
  handler.FindAllProductsResponse:
    properties:
      data:
        items:
          $ref: "#/definitions/schemas.ProductResponse"
        type: array
      message:
        type: string
    type: object
  handler.FindProductResponse:
    properties:
      data:
        $ref: "#/definitions/schemas.ProductResponse"
      message:
        type: string
    type: object
  handler.UpdateProductRequest:
    properties:
      description:
        type: string
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
    type: object
  handler.UpdateProductResponse:
    properties:
      data:
        $ref: "#/definitions/schemas.ProductResponse"
      message:
        type: string
    type: object
  schemas.ProductResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      updatedAt:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: Products API
  version: "1.0"
paths:
  /product:
    delete:
      consumes:
        - application/json
      description: Delete a new product
      parameters:
        - description: Product identification
          in: query
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/service.DeleteProductResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/service.ErrorResponse"
        "504":
          description: Gateway Timeout
          schema:
            $ref: "#/definitions/service.ErrorResponse"
      summary: Delete product
      tags:
        - Products
    get:
      consumes:
        - application/json
      description: Find a product
      parameters:
        - description: Product identification
          in: query
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/service.FindProductResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/service.ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/service.ErrorResponse"
      summary: Find product
      tags:
        - Products
    post:
      consumes:
        - application/json
      description: Create a new product
      parameters:
        - description: Request body
          in: body
          name: request
          required: true
          schema:
            $ref: "#/definitions/service.CreateProductRequest"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/service.CreateProductResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/service.ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/service.ErrorResponse"
      summary: Create product
      tags:
        - Products
    put:
      consumes:
        - application/json
      description: Update a product
      parameters:
        - description: Product identification
          in: query
          name: id
          required: true
          type: string
        - description: Product data to update
          in: body
          name: request
          required: true
          schema:
            $ref: "#/definitions/service.UpdateProductRequest"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/service.UpdateProductResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/service.ErrorResponse"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/service.ErrorResponse"
      summary: Update product
      tags:
        - Products
  /products:
    get:
      consumes:
        - application/json
      description: Find all  products
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/service.FindAllProductsResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/service.ErrorResponse"
      summary: Find All products
      tags:
        - Products
schemes:
  - http
swagger: "2.0"
